server:
  port: 8081

spring:
  datasource:
    type: org.apache.commons.dbcp2.BasicDataSource
    master:
      driver-class-name: ${jdbc.driverClassName.master}
      url: ${jdbc.url.master}
      username: ${jdbc.username.master}
      password: ${jdbc.password.master}
    slave1:
      driver-class-name: ${jdbc.driverClassName.slave1}
      url: ${jdbc.url.slave1}
      username: ${jdbc.username.slave1}
      password: ${jdbc.password.slave1}
    slave2:
      driver-class-name: ${jdbc.driverClassName.slave2}
      url: ${jdbc.url.slave2}
      username: ${jdbc.username.slave2}
      password: ${jdbc.password.slave2}
    slave3:
      driver-class-name: ${jdbc.driverClassName.slave3}
      url: ${jdbc.url.slave3}
      username: ${jdbc.username.slave3}
      password: ${jdbc.password.slave3}
  redis:
    port: 6379
    host: 127.0.0.1
    password:
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        max-wait: -1
        min-idle: 0
    timeout: 0
##### activemq 配置 BEGIN
#  activemq: # 为了测试kafka，暂时注释掉
#    broker-url: tcp://localhost:61616
#    user: admin
#    password: admin
#    queue-name: active.queue.test
#    topic-name: active.topic.test
#  jms:
#    pub-sub-domain: false # 表示queue模式，true是topic模式
##### activemq 配置 END
#  kafka:
#    bootstrap-servers: 127.0.0.1:9091,127.0.0.1:9092,127.0.0.1:9093
#    producer:
#      retries: 0 #若设置大于0的值，服务端会将发送失败的记录重新发送
#      batch-size: 16384 #当将多个记录被发送到同一个分区时， Producer 将尝试将记录组合到更少的请求中。这有助于提升客户端和服务器端的性能。这个配置控制一个批次的默认大小（以字节为单位）。16384是缺省的配置
#      buffer-memory: 33554432  #Producer 用来缓冲等待被发送到服务器的记录的总字节数，33554432是缺省配置
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer #关键字的序列化类
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer #值的序列化类
#    consumer:
#      group-id: myGroup
#      enable-auto-commit: true
#      auto-commit-interval: 1000
#      auto-offset-reset: earliest
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

mybatis:
  mapper-locations: classpath:base/mapper/*Mapper.xml



elasticsearch:
  host: 127.0.0.1
  port: 9200


