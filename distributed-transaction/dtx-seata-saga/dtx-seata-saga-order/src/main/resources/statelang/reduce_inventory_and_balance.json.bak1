{
  "Name": "reduceInventoryAndBalance",
  "Comment": "reduce inventory then reduce balance in a transaction",
  "StartState": "ReduceInventory",
  "Version": "0.0.1",
  "States": {
    "ReduceInventory": {
      "Type": "ServiceTask",
      "ServiceName": "inventoryAction",
      "ServiceMethod": "reduce",
      "CompensateState": "CompensateReduceInventory",
      "Input": [
        "$.[businessKey]",
        "$.[count]"
      ],
      "Output": {
        "reduceInventoryResult": "$.#root"
      },
      "Status": {
        "#root == true": "SU",
        "#root == false": "FA",
        "$Exception{java.lang.Throwable}": "UN"
      },
      "Catch": [
        {
          "Exceptions": [
            "java.lang.Throwable"
          ],
          "Next": "Fail"
        }
      ],
      "Next": "ChoiceReduceInventoryState"
    },
    "ChoiceReduceInventoryState": {
      "Type": "Choice",
      "Choices": [
        {
          "Expression": "[reduceInventoryResult] == true",
          "Next": "ReduceBalance"
        }
      ],
      "Default": "Fail"
    },
    "ReduceBalance": {
      "Type": "ServiceTask",
      "ServiceName": "balanceService",
      "ServiceMethod": "reduce",
      "CompensateState": "CompensateReduceBalance",
      "Input": [
        "$.[businessKey]",
        "$.[amount]"
      ],
      "Output": {
        "reduceBalanceResult": "$.#root"
      },
      "Status": {
        "#root == true": "SU",
        "#root == false": "FA",
        "$Exception{java.lang.Throwable}": "UN"
      },
      "Catch": [
        {
          "Exceptions": [
            "java.lang.Throwable"
          ],
          "Next": "CompensationTrigger"
        }
      ],
      "Next": "ChoiceReduceBalanceState"
    },
    "ChoiceReduceBalanceState": {
      "Type": "Choice",
      "Choices": [
        {
          "Expression": "[reduceBalanceResult] == true",
          "Next": "ReduceComplexBalance"
        },
        {
          "Expression": "[reduceBalanceResult] == false",
          "Next": "CompensationTrigger"
        }
      ],
      "Default": "Fail"
    },
    "ReduceComplexBalance": {
      "Type": "ServiceTask",
      "ServiceName": "balanceService",
      "ServiceMethod": "reduceComplex1",
      "CompensateState": "CompensateReduceComplexBalance",
      "ParameterTypes": ["java.lang.String","com.deng.seata.saga.account.facade.request.BalanceRequest"],
      "Input": [
        "$.[businessKey]",
        {
          "orderNo": "$.[balanceRequest].orderNo",
          "userId": "$.[balanceRequest].userId"
        }
      ],
      "Output": {
        "reduceComplexBalanceResult": "$.#root"
      },
      "Status": {
        "#root.code == '1000'": "SU",
        "#root.code != '1000'": "FA",
        "$Exception{java.lang.Throwable}": "UN"
      },
      "Catch": [
        {
          "Exceptions": [
            "java.lang.Throwable"
          ],
          "Next": "CompensationTrigger"
        }
      ],
      "Next": "ChoiceComplexBalanceState"
    },
    "ChoiceComplexBalanceState": {
      "Type": "Choice",
      "Choices": [
        {
          "Expression": "[reduceComplexBalanceResult] == '1000'",
          "Next": "Succeed"
        },
        {
          "Expression": "[reduceComplexBalanceResult] != '1000'",
          "Next": "CompensationTrigger"
        }
      ],
      "Default": "Fail"
    },
    "CompensateReduceInventory": {
      "Type": "ServiceTask",
      "ServiceName": "inventoryAction",
      "ServiceMethod": "compensateReduce",
      "Input": [
        "$.[businessKey]"
      ]
    },
    "CompensateReduceBalance": {
      "Type": "ServiceTask",
      "ServiceName": "balanceService",
      "ServiceMethod": "compensateReduce",
      "Input": [
        "$.[businessKey]"
      ]
    },
    "CompensateReduceComplexBalance": {
      "Type": "ServiceTask",
      "ServiceName": "balanceService",
      "ServiceMethod": "compensateReduceComplex",
      "ParameterTypes": ["java.lang.String","com.deng.seata.saga.account.facade.request.BalanceRequest"],
      "Input": [
        "$.[businessKey]",
        {
          "orderNo": "$.[balanceRequest].orderNo",
          "userId": "$.[balanceRequest].userId"
        }
      ]
    },
    "CompensationTrigger": {
      "Type": "CompensationTrigger",
      "Next": "Fail"
    },
    "Succeed": {
      "Type": "Succeed"
    },
    "Fail": {
      "Type": "Fail",
      "ErrorCode": "PURCHASE_FAILED",
      "Message": "purchase failed"
    }
  }
}